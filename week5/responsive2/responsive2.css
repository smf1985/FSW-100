/* Remake these images using CSS Grid. Feel free to use more pleasant colors.
Hint: Think ahead about the "smallest common denominator" in terms of how many columns you might want your grid to have.
Image #1: and Image #2:
To get started on this section:
Create a new html and css file, renaming them to: queries.html and styles2.css.
Link your styles2.css sheet to the queries.html file.
The next three images should use the same HTML and CSS files, and the same pieces of content, but will display different 
 on different devices:
Use CSS media queries to make your layout similar to the images below:
Phone: and Tablet: and Laptop: */

#header {
    background-color: #CD5C5C;
    grid-column: 1 / 5;
    border-radius: 3%;
}
#navbar {
    background-color: #40E0D0;
    grid-column: 1 / 3;
    grid-row: 2/4;
    border-radius: 3%;
}
#section1 {
    background-color: #9ACD32;
    grid-column: 3 / 5;
    border-radius: 3%;
}
#section2 {
    background-color: #FF00FF;
    border-radius: 3%;
}
#section3 {
    background-color: #FF00FF;
    border-radius: 3%;
}
#footer {
    background-color: #FFD700;
    display: none;
    border-radius: 3%;
}
.container {
    display: grid;
    grid-template-columns: repeat(4, minmax (20px, 1fr));
    grid-template-rows: repeat(3, 150px);
    gap: 10px;
}

@media only screen and (min-width:768px) {
    .container {
        grid-template-rows: repeat(3, 45px);
    }
    #header {
        grid-column: 1 / 3;
    }
    #navbar {
        grid-column: 3 / 5;
        grid-row: 1 / 2;
    }
    #section1 {
        grid-column: 1 / 2;
    }
    #section2 {
        grid-column: 2 / 5;
    }
    #section3 {
        display: none;
    }
    #footer {
        display: grid;
        grid-column: 1 / 5;
    }
}

